syntax = "proto3";

option go_package = "github.com/reaovyd/orcanet-market-go/internal/gen/proto";

package market;

service Market {
  rpc JoinNetwork (stream KeepAliveRequest) returns (stream KeepAliveResponse);
  rpc UploadFile(stream UploadFileRequest) returns (UploadFileResponse);
  rpc DiscoverPeers (DiscoverPeersRequest) returns (DiscoverPeersReply);
}

enum JoinRequestType {
  JOINER = 0;
  REJOINER = 1;
}

message KeepAliveRequest {
  // Initial join requests do not have to provide anything
  // They will be defined as producers when they upload a file
  string peer_id = 1;
  // Producer MUST also provide its producer_port if it was a producer.
  // If it is a downloader for now, then you MUST provide <NIL>.
  string producer_port = 2;
  JoinRequestType join_request_type = 3;
}
message KeepAliveResponse {
  string peer_id = 1;
}

message UploadFileRequest {
  string peer_id = 1;
  bytes chunk = 2;
  // uploaders uploading to market are clearly seeders; this port represents that
  // seeder's server that allows downloaders to download the actual file contents from
  // 
  // If said peer never uploaded before, then it will be assigned this producer_port
  // that it provides. Then it will be assigned the role of a seeder/producer.
  string producer_port = 3; 
}

message UploadFileResponse {
  string filehash = 1;
}

message DiscoverPeersRequest {
  string filehash = 1;
}

message DiscoverPeersReply {
  repeated string peer_ids = 1;
}
